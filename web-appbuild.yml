name: Web App CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install Dependencies
        run: |
          pip install -r web-app/requirements.txt

      # Start MongoDB container
      - name: Start MongoDB Container
        run: |
          docker run -d --name mongodb -e MONGO_INITDB_DATABASE= ${{ secrets.MONGO_DBNAME }}  -p 27017:27017 mongo:latest

      # Wait for MongoDB to be ready
      - name: Wait for MongoDB
        run: |
          for i in {1..9}; do
            if nc -z localhost 27017; then
              echo "MongoDB is ready!"
              exit 0
            fi
            echo "Waiting for MongoDB..."
            sleep 2
          done
          echo "MongoDB failed to start."
          exit 1

      #env file
      - name: Create env file
        run: |
          cd ${{ matrix.subdir }}
          echo "MONGO_DBNAME=${{ secrets.MONGO_DBNAME }}" > .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "FLASK_APP= ${{ secrets.FLASK_APP }}" >> .env
          echo "FLASK_ENV= ${{ secrets.FLASK_ENV }}" >> .env
          echo "FLASK_PORT= ${{ secrets.FLASK_PORT" >> .env
          echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}" >> .env


      # Run tests
      - name: Run Tests
        env:
          MONGO_DBNAME: ${{ secrets.MONGO_DBNAME }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          pytest web-app/tests/
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_PASSWORD}}
      # Build and push the Docker image
      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USERNAME}}/web-app:latest ./web-app --push

      # Deploy to DigitalOcean
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.DO_HOST}}
          username: root
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            # Navigate to the deployment directory
            cd /root/project

            # Pull the latest images from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME}}/web-app:latest

            docker stop web-app || true
            docker rm web-app || true
            docker-compose -f docker-compose.yml down || true
            docker-compose -f docker-compose.yml up --build -d
